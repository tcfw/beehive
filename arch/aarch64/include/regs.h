#ifndef _ARCH_REGS_H
#define _ARCH_REGS_H

#define ESR_EXCEPTION_CLASS(xrq) ((xrq & 0xFC000000) >> 26)
#define ESR_WNR(xrq) ((xrq & 0x40) >> 6)

#define ESR_EXCEPTION_SVC (0b010101)
#define ESR_EXCEPTION_INSTRUCTION_ABORT_LOWER_EL (0b100000)
#define ESR_EXCEPTION_INSTRUCTION_ABORT_SAME_EL (0b100001)
#define ESR_EXCEPTION_DATA_ABORT_LOWER_EL (0b100100)
#define ESR_EXCEPTION_DATA_ABORT_SAME_EL (0b100101)
#define ESR_EXCEPTION_BREAKPOINT_LOWER_EL (0b110000)
#define ESR_EXCEPTION_BREAKPOINT_SAME_EL (0b110001)
#define ESR_EXCEPTION_SOFTWARE_STEP_LOWER_EL (0b110010)
#define ESR_EXCEPTION_SOFTWARE_STEP_SAME_EL (0b110011)
#define ESR_EXCEPTION_WATCHPOINT_LOWER_EL (0b110100)
#define ESR_EXCEPTION_WATCHPOINT_SAME_EL (0b110101)

#define SPSR_Z (1ULL << 30)
#define SPSR_UAO (1ULL << 23)
#define SPSR_PAN (1ULL << 22)
#define SPSR_SS (1ULL << 21)
#define SPSR_IL (1ULL << 20)
#define SPSR_E (1ULL << 9)
#define SPSR_A (1ULL << 8)
#define SPSR_I (1ULL << 7)
#define SPSR_F (1ULL << 6)
#define SPSR_M_AARCH32 (1ULL << 4)
#define SPSR_M_MASK (0b1111)
#define SPSR_M_EL0 (0b0000)
#define SPSR_M_EL1 (0b0100)	   // EL1 using SP_EL0
#define SPSR_M_EL1_SP (0b0101) // EL1 using SP_EL1
#define SPSR_M_SP (0b0001)

#define MDSCR_SOFTWARE_STEP (1ULL << 0)

#endif