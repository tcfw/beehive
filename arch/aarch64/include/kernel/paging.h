#ifndef _ARCH_VM_H
#define _ARCH_VM_H

#include "stdint.h"
#include <kernel/list.h>

#define PAGE_SIZE 4096
#define CACHE_LINE_SIZE 64

#define L3_BLOCK_SIZE (PAGE_SIZE)
#define L2_BLOCK_SIZE (2 * 1024 * 1024)
#define L1_BLOCK_SIZE (1024 * 1024 * 1024)
#define L0_BLOCK_SIZE (512 * 1024 * 1024 * 1024)

#define TCR_T0SZ_SHIFT 0ULL
#define TCR_TSZ_BITS 6ULL
#define TCR_TSZ_MASK ((1ULL << TCR_TSZ_BITS) - 1ULL)

#define TCR_IRGN0_SHIFT 8ULL
#define TCR_IRGN0_DISABLED (0ULL << TCR_IRGN0_SHIFT)
#define TCR_IRGN0_WRITEBACK (1ULL << TCR_IRGN0_SHIFT)
#define TCR_IRGN0_WRITETHRU (2ULL << TCR_IRGN0_SHIFT)
#define TCR_IRGN0_WRITEBACKNO (3ULL << TCR_IRGN0_SHIFT)

#define TCR_ORGN0_SHIFT 10ULL
#define TCR_ORGN0_DISABLED (0ULL << TCR_ORGN0_SHIFT)
#define TCR_ORGN0_WRITEBACK (1ULL << TCR_ORGN0_SHIFT)
#define TCR_ORGN0_WRITETHRU (2ULL << TCR_ORGN0_SHIFT)
#define TCR_ORGN0_WRITEBACKNO (3ULL << TCR_ORGN0_SHIFT)

#define TCR_SH0_SHIFT 12ULL
#define TCR_SH0_NONE (0ULL << TCR_SH0_SHIFT)
#define TCR_SH0_OUTER (2ULL << TCR_SH0_SHIFT)
#define TCR_SH0_INNER (3ULL << TCR_SH0_SHIFT)

#define TCR_TG0_GRANULE_SHIFT (14ULL)

#define TCR_TG0_GRANULE_4KB (0ULL << TCR_TG0_GRANULE_SHIFT)
#define TCR_TG0_GRANULE_64KB (1ULL << TCR_TG0_GRANULE_SHIFT)
#define TCR_TG0_GRANULE_16KB (2ULL << TCR_TG0_GRANULE_SHIFT)

#define TCR_TG0_GRANULE_SIZE (TCR_TG0_GRANULE_4KB)

#define TCR_T1SZ_SHIFT 16ULL

#define TCR_A1_ASID1 (1ULL << 22ULL)
#define TCR_EPD1_TTBR1_DISABLED (1ULL << 23ULL)

#define TCR_IRGN1_SHIFT 24ULL
#define TCR_IRGN1_DISABLED (0ULL << TCR_IRGN1_SHIFT)
#define TCR_IRGN1_WRITEBACK (1ULL << TCR_IRGN1_SHIFT)
#define TCR_IRGN1_WRITETHRU (2ULL << TCR_IRGN1_SHIFT)
#define TCR_IRGN1_WRITEBACKNO (3ULL << TCR_IRGN1_SHIFT)

#define TCR_ORGN1_SHIFT 26ULL
#define TCR_ORGN1_DISABLED (0ULL << TCR_ORGN1_SHIFT)
#define TCR_ORGN1_WRITEBACK (1ULL << TCR_ORGN1_SHIFT)
#define TCR_ORGN1_WRITETHRU (2ULL << TCR_ORGN1_SHIFT)
#define TCR_ORGN1_WRITEBACKNO (3ULL << TCR_ORGN1_SHIFT)

#define TCR_SH1_SHIFT 28ULL
#define TCR_SH1_NONE (0ULL << TCR_SH1_SHIFT)
#define TCR_SH1_OUTER (2ULL << TCR_SH1_SHIFT)
#define TCR_SH1_INNER (3ULL << TCR_SH1_SHIFT)

#define TCR_TG1_GRANULE_SHIFT 30ULL

#define TCR_TG1_GRANULE_16KB (1ULL << TCR_TG1_GRANULE_SHIFT)
#define TCR_TG1_GRANULE_4KB (2ULL << TCR_TG1_GRANULE_SHIFT)
#define TCR_TG1_GRANULE_64KB (3ULL << TCR_TG1_GRANULE_SHIFT)

#define TCR_TG1_GRANULE_SIZE (TCR_TG1_GRANULE_4KB)

#define TCR_IPS_SHIFT 32ULL
#define TCR_IPS_32BITS (0ULL << TCR_IPS_SHIFT)
#define TCR_IPS_36BITS (1ULL << TCR_IPS_SHIFT)
#define TCR_IPS_40BITS (2ULL << TCR_IPS_SHIFT)
#define TCR_IPS_42BITS (3ULL << TCR_IPS_SHIFT)
#define TCR_IPS_44BITS (4ULL << TCR_IPS_SHIFT)
#define TCR_IPS_48BITS (5ULL << TCR_IPS_SHIFT)

#define TCR_AS_16BIT_ASID (1ULL << 36)
#define TCR_TBI0_TOPBYTE_IGNORED (1ULL << 37)
#define TCR_TBI1_TOPBYTE_IGNORED (1ULL << 38)
#define TCR_TBID0_TBI_DATA_ONLY (1ULL << 51)
#define TCR_TBID1_TBI_DATA_ONLY (1ULL << 52)

#define VM_ENTRY_VALID (1ULL << 0)
#define VM_ENTRY_ISTABLE (1ULL << 1)
#define VM_ENTRY_NONSECURE (1ULL << 5)
#define VM_ENTRY_USER (1ULL << 6)
#define VM_ENTRY_OA_MASK (0xFFFFFFFFF000ULL)
#define VM_ENTRY_UXN (1ULL << 54)
#define VM_ENTRY_PXN (1ULL << 53)

// OS params (55-58)
#define VM_ENTRY_LINKED (1ULL << 55)	 // symbolic link
#define VM_ENTRY_SWAPPEDOUT (1ULL << 56) // not in memory
#define VM_ENTRY_MAPPED (1ULL << 57)	 // mapped to device or similar region

#define VM_ENTRY_ATTR (2ULL)
#define VM_ENTRY_NG (1ULL << 11)
#define VM_ENTRY_AF (1ULL << 10)
#define VM_ENTRY_ISH (3ULL << 8)
#define VM_ENTRY_OSH (2ULL << 8)
#define VM_ENTRY_CONTIGUOUS (1ULL << 52)
#define VM_ENTRY_AP_SHIFT (6)
#define VM_ENTRY_PERM_RO (2ULL << VM_ENTRY_AP_SHIFT)

#define VM_DESC_VALID (1ULL << 0)
#define VM_DESC_IS_DESC (1ULL << 1)
#define VM_DESC_ATTR (2ULL)
#define VM_DESC_AF (1ULL << 10)

// OS params (51-58)
#define VM_DESC_MAPPED (1ULL << 51) // mapped to device or similar region
#define VM_DESC_LINKED (1ULL << 55) // symbolic link

#define VM_DESC_NONSECURE (1ULL << 63)
#define VM_DESC_NEXT_LEVEL_MASK (0xFFFFFFFFF000ULL)
#define VM_DESC_UXN (1ULL << 60)
#define VM_DESC_PXN (1ULL << 59)
#define VM_DESC_AP_KERNEL (1ULL << 61)
#define VM_DESC_AP_RO (1ULL << 62)

#define TTBR_ASID_SHIFT (48ULL)
#define TTBR_ASID_MASK (0xffff000000000000ULL)
#define TTBR_BADDR_MASK (0x0000ffffffffffffULL)

typedef struct vm_table_block_t
{
	uint64_t entries[512];
} vm_table_block;

typedef struct vm_table_t
{
	// struct vm_table_desc_t descriptors[512];
	uint64_t descriptors[512];
} vm_table;

typedef enum
{
	INVALID,
	SHARED,
	NOCACHE,
} entry_state_e;

#endif